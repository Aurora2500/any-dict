{"version":3,"sources":["FormComponents.tsx","AddEntryPrompt.tsx","Entry.tsx","utility/entryReducer.ts","App.tsx","index.tsx"],"names":["LabeledInput","label","value","setValue","className","onChange","e","target","LabeledTextarea","AddEntryPrompt","entryDispatch","useState","word","setWord","translation","setTranslation","body","setBody","onSubmit","preventDefault","type","payload","console","log","EntryCard","entryReducer","state","action","App","filtertext","setFilter","useReducer","entries","showAdd","toggleAdd","filteredEntries","fuzzy","filter","extract","onClick","blob","Blob","JSON","stringify","downloadURL","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","file","files","reader","FileReader","onload","content","result","scontent","parsed","parse","readAsText","b","map","original","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91689df1.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface LabeledInputPrompt {\n\tlabel: string;\n\tvalue: string;\n\tsetValue: (newValue: string) => void;\n}\n\nexport const LabeledInput: React.VFC<LabeledInputPrompt> = ({\n\tlabel,\n\tvalue,\n\tsetValue\n}) => {\n\treturn (\n\t\t<div className=\"labeled-input\">\n\t\t\t<label className=\"labeled-input-label\">{label}</label>\n\t\t\t<input className=\"labeled-input-input\" value={value} onChange={e => setValue(e.target.value)}/>\n\t\t</div>\n\t)\n}\n\nexport const LabeledTextarea: React.VFC<LabeledInputPrompt> = ({\n\tlabel,\n\tvalue,\n\tsetValue\n}) => {\n\treturn (\n\t\t<div className=\"labeled-input\">\n\t\t\t<label className=\"labeled-input-label\">{label}</label>\n\t\t\t<textarea className=\"labeled-input-input\" value={value} onChange={e => setValue(e.target.value)}/>\n\t\t</div>\n\t)\n}","import { LabeledInput, LabeledTextarea } from 'FormComponents';\nimport React, { useState } from 'react';\nimport {EntryAction} from \"types\";\n\ninterface Props {\n\tentryDispatch: (action: EntryAction) => void;\n}\n\nexport const AddEntryPrompt: React.VFC<Props> = ({entryDispatch}) => {\n\tconst [word, setWord] = useState(\"\")\n\tconst [translation, setTranslation] = useState(\"\")\n\tconst [body, setBody] = useState(\"\")\n\treturn(\n\t\t<form className=\"add-entry-form\" onSubmit={e => {\n\t\t\te.preventDefault()\n\t\t\tentryDispatch({\n\t\t\t\ttype: \"add\",\n\t\t\t\tpayload: {\n\t\t\t\t\tword, translation, body\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(\"submitted\")\n\t\t}}>\n\t\t\t<LabeledInput label=\"word\" value={word} setValue={setWord}/>\n\t\t\t<LabeledInput label=\"translation\" value={translation} setValue={setTranslation}/>\n\t\t\t<LabeledTextarea label=\"word\" value={body} setValue={setBody}/>\n\t\t\t<button type=\"submit\">submit</button>\n\t\t</form>\n\t);\n}","import React from \"react\";\nimport { Entry } from \"types\";\n\nconst EntryCard: React.VFC<Entry> = ({word,translation, body}) => {\n\treturn (\n\t<article className=\"dictionary-entry\">\n\t\t<h3>{word}</h3>\n\t\t{translation && <div>Translation: <b>{translation}</b></div>}\n\t\t{body}\n\t</article>\n\t)\n}\n\nexport {EntryCard}","import {Entry, EntryAction} from \"types\";\n\nconst entryReducer = (state: Entry[], action: EntryAction) => {\n\tswitch (action.type) {\n\t\tcase \"add\":\n\t\t\treturn [...state, action.payload];\n\t\tcase \"replace\":\n\t\t\treturn action.payload;\n\t}\n}\n\nexport {entryReducer}","import { AddEntryPrompt } from 'AddEntryPrompt';\nimport { EntryCard } from 'Entry';\nimport React, {useReducer, useState} from 'react';\nimport { entryReducer } from 'utility/entryReducer';\nimport './App.scss';\n\nimport fuzzy from \"fuzzy\";\n\n\nfunction App() {\n\tconst [filtertext, setFilter] = useState(\"\");\n\tconst [entries, entryDispatch] = useReducer(entryReducer, []);\n\tconst [showAdd, toggleAdd] = useState(false);\n\n\tconst filteredEntries = fuzzy.filter(filtertext, entries, {\n\t\textract: e => e.word,\n\t})\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<button onClick={() => {\n\t\t\t\t\tconst blob = new Blob([JSON.stringify(entries)]);\n\t\t\t\t\tconst downloadURL = URL.createObjectURL(blob);\n\t\t\t\t\tconst a = document.createElement(\"a\");\n\t\t\t\t\ta.href=downloadURL;\n\t\t\t\t\ta.download=\"dictionary.json\"\n\t\t\t\t\ta.click();\n\t\t\t\t\tURL.revokeObjectURL(downloadURL);\n\t\t\t\t}}>download</button>\n\t\t\t\t<input onChange={e => {\n\t\t\t\t\tconst file = e.target.files![0];\n\t\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\t\treader.onload = (e => {\n\t\t\t\t\t\tconst content = e.target?.result ?? \"\";\n\t\t\t\t\t\tconst scontent =  typeof content == \"string\" ? content : \"\";\n\t\t\t\t\t\tconst parsed = JSON.parse(scontent);\n\t\t\t\t\t\tentryDispatch({type: \"replace\", payload: parsed})\n\t\t\t\t\t});\n\t\t\t\t\treader.readAsText(file);\n\t\t\t\t}} type=\"file\"/>\n\t\t\t\t<input value={filtertext} onChange={e => setFilter(e.target.value)}/> <button onClick={() => toggleAdd(b => !b)}>Add</button>\n\t\t\t\t{showAdd && <AddEntryPrompt entryDispatch={entryDispatch}/>}\n\t\t\t</header>\n\t\t\t<div className=\"entry-list\">\n\t\t\t\t{filteredEntries.map(e => (\n\t\t\t\t\t<EntryCard key={e.original.word} {...e.original}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}